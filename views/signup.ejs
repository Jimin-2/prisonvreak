<!DOCTYPE html>
<html lang="en">
<script>
  function checkIdAvailability() {
    var id = document.getElementById('id').value;
    var availabilitySpan = document.getElementById('idAvailability');

    fetch('/auth/check_id_availability', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ id: id })
    })
            .then(response => response.json())
            .then(data => {
              if (data.available) {
                availabilitySpan.textContent = '사용 가능한 아이디입니다.';
                availabilitySpan.style.color = 'green';
              } else {
                availabilitySpan.textContent = '이미 사용 중인 아이디입니다.';
                availabilitySpan.style.color = 'red';
              }
            })
            .catch(error => {
              console.error('Error:', error);
            });
  }
  function checkNicknameAvailability() {
    var nickname = document.getElementById('nickname').value;
    var availabilitySpan = document.getElementById('nicknameAvailability');

    fetch('/auth/check_nickname_availability', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ nickname: nickname })
    })
            .then(response => response.json())
            .then(data => {
              if (data.available) {
                availabilitySpan.textContent = '사용 가능한 닉네임입니다.';
                availabilitySpan.style.color = 'green';
              } else {
                availabilitySpan.textContent = '이미 사용 중인 닉네임입니다.';
                availabilitySpan.style.color = 'red';
              }
            })
            .catch(error => {
              console.error('Error:', error);
            });
  }

  function checkPasswordMatch() {
    var password = document.getElementById('password').value;
    var confirmPassword = document.getElementById('confirmPassword').value;
    var matchSpan = document.getElementById('passwordMatch');
    if (password === confirmPassword) {
      matchSpan.textContent = '비밀번호가 일치합니다.';
      matchSpan.style.color = 'green';
    } else {
      matchSpan.textContent = '비밀번호가 일치하지 않습니다.';
      matchSpan.style.color = 'red';
    }
  }

  function sendVerificationCode() {
    var email = document.getElementById('email').value;
    var verificationCodeForm = document.getElementById('verificationCodeForm');

    var verificationCodeExpiration = 5 * 60; // 인증번호 만료 시간 (5분)
    // 인증번호 만료 시간 설정
    var expirationTime = new Date().getTime() + verificationCodeExpiration * 1000;
    localStorage.setItem('verificationCodeExpiration', expirationTime);

    // 인증 번호 생성 (6자리 숫자)
    var verificationCode = Math.floor(100000 + Math.random() * 900000);

    // 이메일로 인증 번호 전송
    fetch('/auth/send_verification_email', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ email: email, code: verificationCode })
    })
            .then(response => {
              if (response.ok) {
                verificationCodeForm.style.display = 'block'; // 인증 번호 입력 폼 표시
                // 인증 번호 입력 칸 밑에 시간 카운트다운 엘리먼트 추가
                var countdownElement = document.createElement('p');
                countdownElement.id = 'countdown';
                verificationCodeForm.appendChild(countdownElement);
                updateCountdown(); // 카운트다운 시작
              } else {
                alert('이메일 전송에 실패했습니다.');
              }
            })
            .catch(error => {
              console.error('Error:', error);
            });
  }

  function updateCountdown() {
    var expirationTime = localStorage.getItem('verificationCodeExpiration');
    if (!expirationTime) return;

    var countdownElement = document.getElementById('countdown');

    // 남은 시간 계산
    var now = new Date().getTime();
    var remainingSeconds = Math.max(0, Math.floor((expirationTime - now) / 1000));

    // 분과 초로 변환하여 표시
    var minutes = Math.floor(remainingSeconds / 60);
    var seconds = remainingSeconds % 60;
    countdownElement.textContent = minutes + '분 ' + seconds + '초';

    if (remainingSeconds === 0) {
      // 시간이 만료되면 인증번호 입력 폼 숨기기
      document.getElementById('verificationCodeForm').style.display = 'none';
      localStorage.removeItem('verificationCodeExpiration');
    } else {
      // 1초마다 업데이트
      setTimeout(updateCountdown, 1000);
    }
  }

  function verifyCode() {
    var enteredCode = document.getElementById('verificationCode').value;
    var verificationStatus = document.getElementById('verificationStatus');

    // 입력된 인증 번호와 생성된 인증 번호 비교
    fetch('/auth/verify_code', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ code: enteredCode })
    })
            .then(response => response.json())
            .then(data => {
              if (data.valid) {
                verificationStatus.textContent = '인증되었습니다.';
                verificationStatus.style.color = 'green';
              } else {
                verificationStatus.textContent = '인증번호가 잘못되었습니다.';
                verificationStatus.style.color = 'red';
              }
            })
            .catch(error => {
              console.error('Error:', error);
            });
  }

  function validateForm() {
    var idAvailability = document.getElementById('idAvailability').textContent;
    var passwordMatch = document.getElementById('passwordMatch').textContent;
    var verificationStatus = document.getElementById('verificationStatus').textContent;
    var nicknameAvailability = document.getElementById('nicknameAvailability').textContent;

    if (nicknameAvailability !== '사용 가능한 닉네임입니다.') {
      alert('닉네임 중복확인을 해주세요.');
      return false;
    } else if (idAvailability !== '사용 가능한 아이디입니다.') {
      alert('아이디 중복확인을 해주세요.');
      return false;
    } else if (passwordMatch !== '비밀번호가 일치합니다.') {
      alert('비밀번호 일치여부를 확인해주세요.');
      return false;
    } else if (verificationStatus !== '인증되었습니다.') {
      alert('이메일 인증을 완료해주세요.');
      return false;
    } else {
      return true;
    }
  }

  document.addEventListener('DOMContentLoaded', function() {
    // 세션 초기화 코드를 이곳에 배치합니다.
    document.getElementById('verificationCodeForm').style.display = 'none';
    document.getElementById('verificationCode').value = '';
    document.getElementById('verificationStatus').textContent = '';
  });
</script>
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">

  <!--글꼴 Link-->
  <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@300&display=swap" rel="stylesheet">

  <!--CSS-->
  <link rel="stylesheet" type="text/css" href="/css/main.css">
  <link rel="stylesheet" type="text/css" href="/css/signup.css">

  <!-- JavaScript -->
  <script src="/javascript/index.js"></script>
    <!-- 반응형 웹 -->
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <!--Title-->
    <title> CAN </title>

</head>

<body>

<!-- header -->
<%- include('partials/header')%>

  <!-- Section -->
  <section id="section">
    <div id="loginTool">
      <form action="/auth/register_process" method="post" onsubmit="return validateForm();">
      <h1> SIGN UP </h1>

          <!-- ID -->
        <div class="inputBox">
          <p> Name </p>
          <input type="text" name="name"  required>
        </div>

        <div class="inputBox" id="divnickname">
          <p> Nickname </p>
          <input type="text" name="nickname" id="nickname" required>
          <button type="button" onclick="checkNicknameAvailability()"> 중복 확인 </button>
        </div>
        <span id="nicknameAvailability"></span>

        <div class="inputBox" id="divid">
          <p> ID </p>
          <input type="text" name="id" id="id" required>
          <button type="button" onclick="checkIdAvailability()"> 중복 확인 </button>
        </div>
        <span id="idAvailability"></span>

        <div class="inputBox">
          <p> Password </p>
          <input type="password" name="pwd" id="password" required>
        </div>

        <div class="inputBox" >
          <p> Password++ </p>
          <input type="password" name="pwd2" id="confirmPassword" required oninput="checkPasswordMatch()">
        </div>
        <span id="passwordMatch"></span>

        <div class="inputBox" >
          <p> Phone </p>
          <input type="tel" name="phone"  required>
        </div>

        <div class="inputBox" id="divemail">
          <p> E-mail </p>
          <input type="email" name="email" id="email" required>
          <button type="button" onclick="sendVerificationCode()"> 인증 </button>
        </div>

        <div class="inputBox" id="verificationCodeForm" style="display: none;">
          <input type="number" placeholder="인증번호 입력" id="verificationCode">
          <button type="button" onclick="verifyCode()"> 확인 </button>
          <p> 인증번호 유효 시간: <span id="countdown">5분 0초</span> </p>
          <p id="verificationStatus"> </p> <!-- 유효하지 않습니다. -->
        </div>

        <div class="submit">
          <button> SIGN UP </button>
        </div>
      </form>

        <div id="signin"> <a href="/auth/login"> Sign In </a> </div>

    </div>
  </section>

<!-- footer -->
<%- include('partials/footer')%>
</body>

</html>
