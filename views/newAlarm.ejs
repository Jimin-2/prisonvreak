<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">

  <!--글꼴 Link-->
  <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@300&display=swap" rel="stylesheet">

  <!--CSS-->
  <link rel="stylesheet" type="text/css" href="/css/main.css">
  <link rel="stylesheet" type="text/css" href="/css/newAlarm.css">

  <!-- JavaScript -->
  <script src="/javascript/index.js"></script>
  <!-- 반응형 웹 -->
  <meta name="viewport" content="width=device-width, initial-scale=1">

  <!--Title-->
  <title> CAN </title>

</head>

<body>
<!-- header -->
<%- include('partials/header')%>

<!-- Section -->
<section id="section">
  <div id="layout">
    <div id="firstLayout">
      <div class="myPageList">
        <h2> 계정 정보 </h2>
        <hr>
        <ul>
          <li><a href="/auth/mypage"> 내 프로필 </a></li>
          <li><a href="" id="openPopup"> 개인 정보 수정 </a></li>
          <li><a href="/auth/mypost"> 작성한 게시글 </a></li>
          <li><a href="/msg/message"> 쪽지함 </a></h3>
          </li>
          <li><a href="/myPage/newAlarm"> 알림 </a></h3>
          </li>
          <li><a href="/myPage/friendList"> 친구목록 </a></h3>
          </li>
        </ul>
      </div>

    </div>
    <div id="secondLayout">
      <div id="first">
        <h2> 알림 </h2>
        <ul class="friend-request-list">
          <% if (pendingList) { %>
            <p>친구 요청 목록</p>
            <% for (let i = pendingList.user2Array.length - 1; i >= 0; i--) { %>
              <li class="friend-request-item">
                <%= pendingList.user2Array[i].mem_nickname %> 님의 친구 요청
                <div class="friend-request-buttons">
                  <button class="accept-button" data-user-id="<%= pendingList.user2Array[i].user1_mem_code %>">수락</button>
                  <button class="reject-button" data-user-id="<%= pendingList.user2Array[i].user1_mem_code %>">거절</button>
                </div>
              </li>
            <% } %>

            <hr> <br><br>

            <p>친구 신청 목록</p>
            <ul class="friend-request-list">
              <% for (let i = 0; i < pendingList.user1Array.length; i++) { %>
                <li class="friend-request-item">
                      <span class="friend-request-text">
                        <%= pendingList.user1Array[i].mem_nickname %> 님에게 친구 요청을 보냈습니다.
                      </span>
                  <button class="cancel-button" data-user-id="<%= pendingList.user1Array[i].user2_mem_code %>">요청 취소</button>
                </li>
              <% } %>
            </ul>
          <% } else { %>
            <p>알림이 없습니다 ^^</p>
          <% } %>


      </div>



    </div>
  </div>
</section>

<!-- footer -->
<%- include('partials/footer')%>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const acceptButtons = document.querySelectorAll(".accept-button");
    const rejectButtons = document.querySelectorAll(".reject-button");
    const cancelButtons = document.querySelectorAll(".cancel-button");


    acceptButtons.forEach((button) => {
      button.addEventListener("click", (event) => {
        const friend_code = event.target.getAttribute("data-user-id");
        fetch('/acceptFriend', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ friend_code: friend_code }),
        })
                .then(response => response.json())
                .then(data => {
                  console.log(data)
                  if (data) {
                    alert('친구 요청이 수락되었습니다!');
                    location.reload();
                  } else {
                    alert('친구 신청 수락 중에 문제가 발생했습니다.');
                  }
                })
                .catch(error => {
                  console.error('친구 신청 수락 중에 오류 발생:', error);
                });
      });
    });


    rejectButtons.forEach((button) => { // 거절
      button.addEventListener("click", (event) => {
        const friend_code = event.target.getAttribute("data-user-id");
        fetch('/rejectFriend', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ friend_code: friend_code }),
        })
                .then(response => response.json())
                .then(data => {
                  console.log(data)
                  if (data) {
                    alert('친구 요청이 거부되었습니다.');
                    location.reload();
                  } else {
                    alert('친구 거부 오류');
                  }
                })
                .catch(error => {
                  console.error('친구 요청 거부 중에 오류 발생:', error);
                });
      });
    });

    cancelButtons.forEach((button) => {
      button.addEventListener("click", (event) => {
        const friend_code = event.target.getAttribute("data-user-id");
        fetch('/cancelFriend', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ friend_code: friend_code }),
        })
                .then(response => response.json())
                .then(data => {
                  if (data) {
                    alert('친구 요청이 취소되었습니다.');
                    location.reload();
                  } else {
                    alert('친구 요청 취소');
                  }
                })
                .catch(error => {
                  console.error('친구 요청 취소 중에 오류 발생:', error);
                });
      });
    });
  });

  // 팝업 창을 열기 위한 함수
  function openPopup() {
    // 현재 호스트와 프로토콜을 가져와서 URL을 생성
    const baseUrl = window.location.protocol + '//' + window.location.host;

    // 라우터 주소를 추가하여 완전한 URL을 생성
    const routerUrl = baseUrl + '/auth/myProfileInfo';

    // window.open 메서드를 사용하여 팝업 창을 열음
    window.open(routerUrl, 'popup', 'width=1100,height=760,top=300,left=600,resizable=no');
  }

  // 링크 클릭 시 팝업 창 열기 함수를 호출
  document.getElementById('openPopup').addEventListener('click', function(event) {
    event.preventDefault(); // 기본 동작(링크 이동)을 막습니다.
    openPopup(); // 팝업 열기 함수를 호출합니다.
  });
</script>
</body>
</html>